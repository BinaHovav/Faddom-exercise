{"ast":null,"code":"var _jsxFileName = \"/Users/binahovav/faddom-exercise/frontend/src/components/LineChart/lineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale);\nexport default function LineChart() {\n  _s();\n  const [data, setData] = useState([]);\n  const [timePeriod, setTimePeriod] = useState(\"lastDay\");\n  const [interval, setInterval] = useState(300);\n  const [ipAddress, setIpAddress] = useState(\"172.31.88.161\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (ipAddress) {\n      fetchData();\n    }\n  }, [timePeriod, interval, ipAddress]);\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`http://localhost:3000/cpu-usage?timePeriod=${timePeriod}&interval=${interval}&ipAddress=${ipAddress}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      if (Array.isArray(result.metrics)) {\n        setData(result.metrics);\n      } else {\n        throw new Error(\"Invalid data format: 'metrics' is not an array.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const chartData = {\n    labels: data.map(point => point.Timestamp),\n    datasets: [{\n      label: \"CPU Usage (%)\",\n      data: data.map(point => point.Average),\n      borderColor: \"rgb(75, 192, 192)\",\n      backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n      borderWidth: 2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CPU Usage Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time Period: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timePeriod,\n        onChange: e => setTimePeriod(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lastDay\",\n          children: \"Last Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lastMonth\",\n          children: \"Last Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lastYear\",\n          children: \"Last Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Interval (seconds): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: interval,\n        onChange: e => setInterval(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"IP Address: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: ipAddress,\n        onChange: e => setIpAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        disabled: loading,\n        children: loading ? \"Loading...\" : \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), data.length > 0 ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        elements: {\n          line: {\n            borderJoinStyle: \"round\"\n          }\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: \"CPU Usage Over Time\"\n          },\n          legend: {\n            display: false\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data to display. Please load data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"+82RiRmZvasGyOrzBAJcBtbeXvQ=\");\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","CategoryScale","Line","jsxDEV","_jsxDEV","register","LineChart","_s","data","setData","timePeriod","setTimePeriod","interval","setInterval","ipAddress","setIpAddress","loading","setLoading","error","setError","fetchData","response","fetch","ok","Error","status","result","json","Array","isArray","metrics","console","message","chartData","labels","map","point","Timestamp","datasets","label","Average","borderColor","backgroundColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","onClick","disabled","style","color","textAlign","length","options","elements","line","borderJoinStyle","plugins","title","display","text","legend","_c","$RefreshReg$"],"sources":["/Users/binahovav/faddom-exercise/frontend/src/components/LineChart/lineChart.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChart.register(CategoryScale);\n\nexport default function LineChart() {\n  const [data, setData] = useState([]);\n  const [timePeriod, setTimePeriod] = useState(\"lastDay\");\n  const [interval, setInterval] = useState(300);\n  const [ipAddress, setIpAddress] = useState(\"172.31.88.161\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (ipAddress) {\n      fetchData();\n    }\n  }, [timePeriod, interval, ipAddress, ]);\n\n  const fetchData = async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch(\n        `http://localhost:3000/cpu-usage?timePeriod=${timePeriod}&interval=${interval}&ipAddress=${ipAddress}`\n      );\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const result = await response.json();\n      if (Array.isArray(result.metrics)) {\n        setData(result.metrics);\n      } else {\n        throw new Error(\"Invalid data format: 'metrics' is not an array.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const chartData = {\n    labels: data.map((point) => point.Timestamp),\n    datasets: [\n      {\n        label: \"CPU Usage (%)\",\n        data: data.map((point) => point.Average),\n        borderColor: \"rgb(75, 192, 192)\",\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <h1>CPU Usage Over Time</h1>\n\n      <div>\n        <label>Time Period: </label>\n        <select\n          value={timePeriod}\n          onChange={(e) => setTimePeriod(e.target.value)}\n        >\n          <option value=\"lastDay\">Last Day</option>\n          <option value=\"lastMonth\">Last Month</option>\n          <option value=\"lastYear\">Last Year</option>\n        </select>\n      </div>\n\n      <div>\n        <label>Interval (seconds): </label>\n        <input\n          type=\"number\"\n          value={interval}\n          onChange={(e) => setInterval(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <label>IP Address: </label>\n        <input\n          type=\"text\"\n          value={ipAddress}\n          onChange={(e) => setIpAddress(e.target.value)}\n        />\n      </div>\n\n      <div>\n        <button onClick={fetchData} disabled={loading}>\n          {loading ? \"Loading...\" : \"Load\"}\n        </button>\n      </div>\n\n      {error && <p style={{ color: \"red\" }}>Error: {error}</p>}\n\n      <h2 style={{ textAlign: \"center\" }}>Line Chart</h2>\n      {data.length > 0 ? (\n        <Line\n          data={chartData}\n          options={{\n            elements: {\n              line: {\n                borderJoinStyle: \"round\",\n              },\n            },\n            plugins: {\n              title: {\n                display: true,\n                text: \"CPU Usage Over Time\",\n              },\n              legend: {\n                display: false,\n              },\n            },\n          }}\n        />\n      ) : (\n        !loading && <p>No data to display. Please load data.</p>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}