{"ast":null,"code":"var _jsxFileName = \"/Users/binahovav/faddom-exercise/frontend/src/components/LineChart/lineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale);\nexport default function LineChart() {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    async function fetchCpuUsage() {\n      try {\n        const response = await fetch(\"http://localhost:3000/cpu-usage\");\n        const data = await response.json();\n        const metrics = data.metrics.Datapoints.sort((a, b) => new Date(a.Timestamp) - new Date(b.Timestamp) // Sort by timestamp\n        );\n        const labels = metrics.map(point => new Date(point.Timestamp).toLocaleTimeString());\n        const dataset = {\n          labels,\n          datasets: [{\n            label: \"CPU Usage (%)\",\n            data: metrics.map(point => point.Average),\n            // Use \"Average\" CPU utilization\n            borderColor: \"rgb(75, 192, 192)\",\n            backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n            borderWidth: 2\n          }]\n        };\n        setChartData(dataset);\n      } catch (error) {\n        console.error(\"Error fetching CPU usage data:\", error);\n      }\n    }\n    fetchCpuUsage();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CPU Usage Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), chartData ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        responsive: true,\n        elements: {\n          line: {\n            tension: 0.4 // Curve the line\n          }\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: \"CPU Usage (%) Over Time\"\n          },\n          legend: {\n            display: true\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","CategoryScale","Line","jsxDEV","_jsxDEV","register","LineChart","_s","chartData","setChartData","fetchCpuUsage","response","fetch","data","json","metrics","Datapoints","sort","a","b","Date","Timestamp","labels","map","point","toLocaleTimeString","dataset","datasets","label","Average","borderColor","backgroundColor","borderWidth","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","elements","line","tension","plugins","title","display","text","legend","_c","$RefreshReg$"],"sources":["/Users/binahovav/faddom-exercise/frontend/src/components/LineChart/lineChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChart.register(CategoryScale);\n\nexport default function LineChart() {\n  const [chartData, setChartData] = useState(null);\n\n  useEffect(() => {\n    async function fetchCpuUsage() {\n      try {\n        const response = await fetch(\"http://localhost:3000/cpu-usage\"); \n        const data = await response.json();\n\n        const metrics = data.metrics.Datapoints.sort(\n          (a, b) => new Date(a.Timestamp) - new Date(b.Timestamp) // Sort by timestamp\n        );\n\n        const labels = metrics.map((point) =>\n          new Date(point.Timestamp).toLocaleTimeString()\n        );\n\n        const dataset = {\n          labels,\n          datasets: [\n            {\n              label: \"CPU Usage (%)\",\n              data: metrics.map((point) => point.Average), // Use \"Average\" CPU utilization\n              borderColor: \"rgb(75, 192, 192)\",\n              backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n              borderWidth: 2,\n            },\n          ],\n        };\n\n        setChartData(dataset);\n      } catch (error) {\n        console.error(\"Error fetching CPU usage data:\", error);\n      }\n    }\n\n    fetchCpuUsage();\n  }, []);\n\n  return (\n    <div className=\"chart-container\">\n      <h1>CPU Usage Over Time</h1>\n      {chartData ? (\n        <Line\n          data={chartData}\n          options={{\n            responsive: true,\n            elements: {\n              line: {\n                tension: 0.4, // Curve the line\n              },\n            },\n            plugins: {\n              title: {\n                display: true,\n                text: \"CPU Usage (%) Over Time\",\n              },\n              legend: {\n                display: true,\n              },\n            },\n          }}\n        />\n      ) : (\n        <p>Loading data...</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,eAAe;AACjC,SAASC,aAAa,QAAQ,UAAU;AACxC,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvCJ,KAAK,CAACK,QAAQ,CAACJ,aAAa,CAAC;AAE7B,eAAe,SAASK,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,eAAeY,aAAaA,CAAA,EAAG;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAElC,MAAMC,OAAO,GAAGF,IAAI,CAACE,OAAO,CAACC,UAAU,CAACC,IAAI,CAC1C,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAAC;QAC1D,CAAC;QAED,MAAMC,MAAM,GAAGP,OAAO,CAACQ,GAAG,CAAEC,KAAK,IAC/B,IAAIJ,IAAI,CAACI,KAAK,CAACH,SAAS,CAAC,CAACI,kBAAkB,CAAC,CAC/C,CAAC;QAED,MAAMC,OAAO,GAAG;UACdJ,MAAM;UACNK,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,eAAe;YACtBf,IAAI,EAAEE,OAAO,CAACQ,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACK,OAAO,CAAC;YAAE;YAC7CC,WAAW,EAAE,mBAAmB;YAChCC,eAAe,EAAE,yBAAyB;YAC1CC,WAAW,EAAE;UACf,CAAC;QAEL,CAAC;QAEDvB,YAAY,CAACiB,OAAO,CAAC;MACvB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF;IAEAvB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAK+B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BhC,OAAA;MAAAgC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3BhC,SAAS,gBACRJ,OAAA,CAACF,IAAI;MACHW,IAAI,EAAEL,SAAU;MAChBiC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,QAAQ,EAAE;UACRC,IAAI,EAAE;YACJC,OAAO,EAAE,GAAG,CAAE;UAChB;QACF,CAAC;QACDC,OAAO,EAAE;UACPC,KAAK,EAAE;YACLC,OAAO,EAAE,IAAI;YACbC,IAAI,EAAE;UACR,CAAC;UACDC,MAAM,EAAE;YACNF,OAAO,EAAE;UACX;QACF;MACF;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEFpC,OAAA;MAAAgC,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACtB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACjC,EAAA,CApEuBD,SAAS;AAAA6C,EAAA,GAAT7C,SAAS;AAAA,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}