{"ast":null,"code":"var _jsxFileName = \"/Users/binahovav/faddom-exercise/frontend/src/components/LineChart/lineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport './lineChart.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale);\nexport default function LineChart() {\n  _s();\n  const [data, setData] = useState(null);\n  const [timePeriod, setTimePeriod] = useState(\"lastDay\");\n  const [period, setPeriod] = useState(300);\n  const [ipAddress, setIpAddress] = useState(\"172.31.88.161\");\n  const [loading, setLoading] = useState(false);\n\n  // Fetching the data based on timePeriod, period, and IP address\n  const fetchData = async () => {\n    if (!ipAddress) return alert(\"IP Address is required!\");\n    setLoading(true);\n    try {\n      const response = await fetch(`http://localhost:3000/cpu-usage?timePeriod=${timePeriod}&p=${period}&ipAddress=${ipAddress}`);\n      const result = await response.json();\n      console.log(\"Fetched data:\", result);\n      if (Array.isArray(result.metrics.Datapoints)) {\n        // Sort the data by Timestamp in ascending order\n        const sortedData = result.metrics.Datapoints.sort((a, b) => new Date(a.Timestamp) - new Date(b.Timestamp));\n        setData(sortedData);\n      } else {\n        console.error(\"Error: 'metrics' is not an array.\");\n        setData([]);\n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Creating the chart data and organizing data according to instructions\n  const chartData = {\n    labels: data === null || data === void 0 ? void 0 : data.map(point => new Date(point.Timestamp).toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    })),\n    datasets: [{\n      label: \"CPU Usage (%)\",\n      data: data === null || data === void 0 ? void 0 : data.map(point => point.Average),\n      borderColor: \"rgb(75, 192, 192)\",\n      backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n      borderWidth: 2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"chart-title\",\n      children: \"CPU Usage Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"Time Period: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timePeriod,\n        onChange: event => setTimePeriod(event.target.value),\n        className: \"input-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"12h\",\n          children: \"12h\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lastDay\",\n          children: \"Last Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lastMonth\",\n          children: \"Last Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lastYear\",\n          children: \"Last Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"Period (seconds): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: period,\n        onChange: event => setPeriod(event.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"IP Address: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: ipAddress,\n        onChange: e => setIpAddress(e.target.value),\n        className: \"input-field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        disabled: loading,\n        className: \"load-button\",\n        children: loading ? \"Loading...\" : \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"chart-subtitle\",\n      children: \"Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 3\n    }, this), data ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        elements: {\n          line: {\n            borderJoinStyle: \"round\"\n          }\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: \"CPU Usage Over Time\"\n          },\n          legend: {\n            display: false\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data to display. Please load data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 1\n  }, this);\n}\n_s(LineChart, \"BAVYtUWLRYkyWrTU5f8xwv2/lDg=\");\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","Chart","CategoryScale","Line","jsxDEV","_jsxDEV","register","LineChart","_s","data","setData","timePeriod","setTimePeriod","period","setPeriod","ipAddress","setIpAddress","loading","setLoading","fetchData","alert","response","fetch","result","json","console","log","Array","isArray","metrics","Datapoints","sortedData","sort","a","b","Date","Timestamp","error","chartData","labels","map","point","toLocaleTimeString","hour","minute","datasets","label","Average","borderColor","backgroundColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","event","target","type","e","onClick","disabled","options","elements","line","borderJoinStyle","plugins","title","display","text","legend","_c","$RefreshReg$"],"sources":["/Users/binahovav/faddom-exercise/frontend/src/components/LineChart/lineChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport './lineChart.scss';\n\n\nChart.register(CategoryScale);\n\nexport default function LineChart() {\n  const [data, setData] = useState(null);\n  const [timePeriod, setTimePeriod] = useState(\"lastDay\"); \n  const [period, setPeriod] = useState(300); \n  const [ipAddress, setIpAddress] = useState(\"172.31.88.161\"); \n  const [loading, setLoading] = useState(false); \n\n  // Fetching the data based on timePeriod, period, and IP address\n  const fetchData = async () => {\n    if (!ipAddress) return alert(\"IP Address is required!\");\n\n    setLoading(true); \n\n    try {\n      const response = await fetch(\n        `http://localhost:3000/cpu-usage?timePeriod=${timePeriod}&p=${period}&ipAddress=${ipAddress}`\n      );\n      const result = await response.json();\n      console.log(\"Fetched data:\", result); \n\n      if (Array.isArray(result.metrics.Datapoints)) {\n        // Sort the data by Timestamp in ascending order\n        const sortedData = result.metrics.Datapoints.sort(\n          (a, b) => new Date(a.Timestamp) - new Date(b.Timestamp)\n        );\n        setData(sortedData); \n      } else {\n        console.error(\"Error: 'metrics' is not an array.\");\n        setData([]); \n      }\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false); \n    }\n  };\n  \n\n  // Creating the chart data and organizing data according to instructions\n  const chartData = {\n    labels: data?.map((point) =>\n      new Date(point.Timestamp).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\n    ),\n        datasets: [\n      {\n        label: \"CPU Usage (%)\",\n        data: data?.map((point) => point.Average), \n        borderColor: \"rgb(75, 192, 192)\",\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return (\n<div className=\"chart-container\">\n  <h1 className=\"chart-title\">CPU Usage Over Time</h1>\n\n  {/* Time period selection */}\n  <div className=\"input-group\">\n    <label className=\"input-label\">Time Period: </label>\n    <select\n      value={timePeriod}\n      onChange={(event) => setTimePeriod(event.target.value)}\n      className=\"input-select\"\n    >\n      <option value=\"12h\">12h</option>\n      <option value=\"lastDay\">Last Day</option>\n      <option value=\"lastMonth\">Last Month</option>\n      <option value=\"lastYear\">Last Year</option>\n    </select>\n  </div>\n\n  {/* Period input (in seconds) */}\n  <div className=\"input-group\">\n    <label className=\"input-label\">Period (seconds): </label>\n    <input\n      type=\"number\"\n      value={period}\n      onChange={(event) => setPeriod(event.target.value)}\n      className=\"input-field\"\n    />\n  </div>\n\n  {/* IP address input */}\n  <div className=\"input-group\">\n    <label className=\"input-label\">IP Address: </label>\n    <input\n      type=\"text\"\n      value={ipAddress}\n      onChange={(e) => setIpAddress(e.target.value)}\n      className=\"input-field\"\n    />\n  </div>\n\n  {/* Load button */}\n  <div className=\"button-container\">\n    <button onClick={fetchData} disabled={loading} className=\"load-button\">\n      {loading ? \"Loading...\" : \"Load\"}\n    </button>\n  </div>\n\n  {/* The chart from chartjs library */}\n\n  <h2 className=\"chart-subtitle\">Line Chart</h2>\n  {data ? (\n    <Line\n      data={chartData}\n      options={{\n        elements: {\n          line: {\n            borderJoinStyle: \"round\",\n          },\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: \"CPU Usage Over Time\",\n          },\n          legend: {\n            display: false,\n          },\n        },\n      }}\n    />\n  ) : (\n    !loading && <p>No data to display. Please load data.</p>\n  )}\n</div>\n\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}