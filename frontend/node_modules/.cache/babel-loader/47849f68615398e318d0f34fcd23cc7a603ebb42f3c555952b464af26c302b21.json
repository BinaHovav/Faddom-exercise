{"ast":null,"code":"var _jsxFileName = \"/Users/binahovav/faddom-exercise/frontend/src/components/LineChart/lineChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale);\nexport default function LineChart() {\n  _s();\n  const [data, setData] = useState(null);\n  const [timePeriod, setTimePeriod] = useState(\"lastDay\"); // default to last day\n  const [period, setPeriod] = useState(300); // Period in seconds\n  const [ipAddress, setIpAddress] = useState(\"\"); // IP address input\n  const [loading, setLoading] = useState(false); // To track loading state\n\n  // Handle data fetching based on timePeriod, period, and IP address\n  const fetchData = async () => {\n    if (!ipAddress) return alert(\"IP Address is required!\");\n    setLoading(true); // Start loading\n\n    try {\n      const response = await fetch(`http://localhost:3000/cpu-usage?timePeriod=${timePeriod}&period=${period}&ipAddress=${ipAddress}`);\n      const result = await response.json();\n      setData(result.metrics);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n\n  // Prepare the chart data\n  const chartData = {\n    labels: data === null || data === void 0 ? void 0 : data.map(point => point.Timestamp),\n    // Assuming metrics have Timestamp field\n    datasets: [{\n      label: \"CPU Usage (%)\",\n      data: data === null || data === void 0 ? void 0 : data.map(point => point.Average),\n      // Assuming Average is the metric you want\n      borderColor: \"rgb(75, 192, 192)\",\n      backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n      borderWidth: 2\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CPU Usage Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time Period: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: timePeriod,\n        onChange: e => setTimePeriod(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lastDay\",\n          children: \"Last Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lastMonth\",\n          children: \"Last Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"lastYear\",\n          children: \"Last Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Period (seconds): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: period,\n        onChange: e => setPeriod(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"IP Address: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: ipAddress,\n        onChange: e => setIpAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        disabled: loading,\n        children: loading ? \"Loading...\" : \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Line Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), data ? /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: {\n        elements: {\n          line: {\n            borderJoinStyle: \"round\"\n          }\n        },\n        plugins: {\n          title: {\n            display: true,\n            text: \"CPU Usage Over Time\"\n          },\n          legend: {\n            display: false\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data to display. Please load data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"wghGawLjI1lQhrXcMxqixbPTQh0=\");\n_c = LineChart;\nvar _c;\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"names":["React","useState","Chart","CategoryScale","Line","jsxDEV","_jsxDEV","register","LineChart","_s","data","setData","timePeriod","setTimePeriod","period","setPeriod","ipAddress","setIpAddress","loading","setLoading","fetchData","alert","response","fetch","result","json","metrics","error","console","chartData","labels","map","point","Timestamp","datasets","label","Average","borderColor","backgroundColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","onClick","disabled","style","textAlign","options","elements","line","borderJoinStyle","plugins","title","display","text","legend","_c","$RefreshReg$"],"sources":["/Users/binahovav/faddom-exercise/frontend/src/components/LineChart/lineChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Chart from \"chart.js/auto\";\nimport { CategoryScale } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChart.register(CategoryScale);\n\nexport default function LineChart() {\n  const [data, setData] = useState(null);\n  const [timePeriod, setTimePeriod] = useState(\"lastDay\"); // default to last day\n  const [period, setPeriod] = useState(300); // Period in seconds\n  const [ipAddress, setIpAddress] = useState(\"\"); // IP address input\n  const [loading, setLoading] = useState(false); // To track loading state\n\n  // Handle data fetching based on timePeriod, period, and IP address\n  const fetchData = async () => {\n    if (!ipAddress) return alert(\"IP Address is required!\");\n\n    setLoading(true); // Start loading\n\n    try {\n      const response = await fetch(\n        `http://localhost:3000/cpu-usage?timePeriod=${timePeriod}&period=${period}&ipAddress=${ipAddress}`\n      );\n      const result = await response.json();\n      setData(result.metrics);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n\n  // Prepare the chart data\n  const chartData = {\n    labels: data?.map((point) => point.Timestamp), // Assuming metrics have Timestamp field\n    datasets: [\n      {\n        label: \"CPU Usage (%)\",\n        data: data?.map((point) => point.Average), // Assuming Average is the metric you want\n        borderColor: \"rgb(75, 192, 192)\",\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\",\n        borderWidth: 2,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <h1>CPU Usage Over Time</h1>\n      \n      {/* Time period selection */}\n      <div>\n        <label>Time Period: </label>\n        <select\n          value={timePeriod}\n          onChange={(e) => setTimePeriod(e.target.value)}\n        >\n          <option value=\"lastDay\">Last Day</option>\n          <option value=\"lastMonth\">Last Month</option>\n          <option value=\"lastYear\">Last Year</option>\n        </select>\n      </div>\n\n      {/* Period input (in seconds) */}\n      <div>\n        <label>Period (seconds): </label>\n        <input\n          type=\"number\"\n          value={period}\n          onChange={(e) => setPeriod(e.target.value)}\n        />\n      </div>\n\n      {/* IP address input */}\n      <div>\n        <label>IP Address: </label>\n        <input\n          type=\"text\"\n          value={ipAddress}\n          onChange={(e) => setIpAddress(e.target.value)}\n        />\n      </div>\n\n      {/* Load button */}\n      <div>\n        <button onClick={fetchData} disabled={loading}>\n          {loading ? \"Loading...\" : \"Load\"}\n        </button>\n      </div>\n\n      <h2 style={{ textAlign: \"center\" }}>Line Chart</h2>\n      {data ? (\n        <Line\n          data={chartData}\n          options={{\n            elements: {\n              line: {\n                borderJoinStyle: \"round\",\n              },\n            },\n            plugins: {\n              title: {\n                display: true,\n                text: \"CPU Usage Over Time\",\n              },\n              legend: {\n                display: false,\n              },\n            },\n          }}\n        />\n      ) : (\n        !loading && <p>No data to display. Please load data.</p>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}